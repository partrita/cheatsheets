#import "./templates/conf.typ": *

#show: template.with(
  title: "ggplot2 치트시트",
  header: [#datetime.today().display()],
  footer: "generated by Gemini CLI",
)

// 주요 내용 시작
= 기본 구조

```R
library(ggplot2)

# 데이터 로드 (예시: mtcars 데이터셋)
data(mtcars)

# ggplot2 기본 구조: 데이터 + 매핑 + 기하 객체
ggplot(data = mtcars, aes(x = hp, y = mpg)) +
  geom_point() # 산점도
```

= 기하 객체 (Geoms)

== 산점도 (Scatter Plot)

```R
library(ggplot2)
data(mtcars)

ggplot(mtcars, aes(x = hp, y = mpg)) +
  geom_point(aes(color = factor(cyl), size = wt)) # 색상과 크기 매핑
```

== 라인 플롯 (Line Plot)

```R
library(ggplot2)

df <- data.frame(
  x = 1:10,
  y = cumsum(rnorm(10))
)

ggplot(df, aes(x = x, y = y)) +
  geom_line() +
  geom_point()
```

== 막대 그래프 (Bar Plot)

```R
library(ggplot2)
data(mtcars)

ggplot(mtcars, aes(x = factor(cyl))) +
  geom_bar(fill = "steelblue") # 실린더별 개수
```

== 히스토그램 (Histogram)

```R
library(ggplot2)
data(mtcars)

ggplot(mtcars, aes(x = mpg)) +
  geom_histogram(binwidth = 3, fill = "darkgreen", color = "black")
```

== 박스 플롯 (Box Plot)

```R
library(ggplot2)
data(mtcars)

ggplot(mtcars, aes(x = factor(cyl), y = mpg)) +
  geom_boxplot(fill = "lightblue")
```

= 축 및 레이블

```R
library(ggplot2)
data(mtcars)

ggplot(mtcars, aes(x = hp, y = mpg)) +
  geom_point() +
  labs(
    title = "마력과 연비의 관계",
    x = "마력 (hp)",
    y = "연비 (mpg)",
    caption = "데이터 출처: mtcars"
  ) +
  xlim(50, 350) + # X축 범위 설정
  ylim(10, 35)   # Y축 범위 설정
```

= 테마 및 색상

```R
library(ggplot2)
data(mtcars)

ggplot(mtcars, aes(x = hp, y = mpg, color = factor(cyl))) +
  geom_point() +
  theme_minimal() + # 미니멀 테마 적용
  scale_color_brewer(palette = "Set1") # 색상 팔레트 변경
```

= 패싯 (Faceting)

```R
library(ggplot2)
data(mtcars)

ggplot(mtcars, aes(x = hp, y = mpg)) +
  geom_point() +
  facet_wrap(~ factor(cyl)) # 실린더별로 분리하여 플롯
```

= 플롯 저장

```R
library(ggplot2)
data(mtcars)

p <- ggplot(mtcars, aes(x = hp, y = mpg)) +
  geom_point()

ggsave("my_ggplot.png", plot = p, width = 6, height = 4, dpi = 300)
print("my_ggplot.png 저장 완료")
```
